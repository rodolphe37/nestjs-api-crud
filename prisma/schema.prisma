// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int       @id @default(autoincrement())
  username  String    @db.VarChar(65)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]    @relation("user_posts")
  comments  Comment[] @relation("user_comments")
}

model Post {
  postId   Int       @id @default(autoincrement())
  title    String    @db.VarChar(255)
  body     String
  userId   Int
  user     User      @relation("user_posts", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
  comments Comment[] @relation("post_comments")
}

model Comment {
  commentId Int    @id @default(autoincrement())
  content   String @db.VarChar(255)
  postId    Int
  userId    Int
  post      Post   @relation("post_comments", fields: [postId], references: [postId], onUpdate: Cascade, onDelete: Cascade)
  user      User   @relation("user_comments", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
}
